<template>
  <button @click="add()">新增卡片</button>
  <button @click="open(2)">編輯卡片</button>
  <div class="kanban-board">
    <div v-for="(column, index) in columns" :key="index" class="kanban-column">
      <h2>{{ column.name }}</h2>
      <draggable v-model="column.tasks" :group="{ name: 'tasks', put: true }">
        <template #item="{ element }" >
          <div class="kanban-task" @click="edit(element)" > 
            {{ element.name }}
            {{ element.id }}
          </div>
        </template>
      </draggable>
    </div>
  </div>
</template>

<script lang="ts" setup>
import { ref ,reactive ,watch } from 'vue';
import draggable from 'vuedraggable';

interface Task {
  id: number;
  name: string;
}

interface Column {
  name: string;
  tasks: Task[];
}

let columns = reactive<Column[]>([
  {
    name: 'To Do',
    tasks: [
      { id: 1, name: 'Task 1' },
      { id: 2, name: 'Task 2' },
    ],
  },
  {
    name: 'In Progress',
    tasks: [
      { id: 3, name: 'Task 3' },
    ],
  },
  {
    name: 'peading',
    tasks: [
      { id: 5, name: 'Task 4' },
    ],
  },
  {
    name: 'Done',
    tasks: [
      { id: 4, name: 'Task 4' },
    ],
  },
]);

    const add = () => {
      columns[0].tasks.push({ name: "Juan " , id: 123 })
    };

    const edit = (data:any) => {
      
      data.id =123
      data.name ='QQQQ'
    };

watch(
  columns,
  (newValue, oldValue) => {
    console.log('columns 改變了', newValue, oldValue)
  },
  { deep: true }
)
  

</script>

<style scoped>
.kanban-board {
  display: flex;
  gap: 16px;
}

.kanban-column {
  background-color: #f4f4f4;
  padding: 16px;
  border-radius: 8px;
  width: 200px;
}

.kanban-task {
  background-color: #ffffff;
  padding: 8px;
  border: 1px solid #ddd;
  border-radius: 4px;
  margin-bottom: 8px;
}
</style>
